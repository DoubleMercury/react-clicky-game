{"version":3,"sources":["components/Card/index.js","components/Container/index.js","components/Header/index.js","App.js","index.js"],"names":["Card","props","react_default","a","createElement","className","onClick","counter","id","src","image","Container","children","Header","score","highScore","App","state","cards","_this","find","i","count","setState","console","log","this","sort","Math","random","gameOver","forEach","card","alert","concat","_this2","components_Container","components_Header","map","components_Card","key","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"28DAaeA,MAVf,SAAcC,GACV,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,QAAS,kBAAOL,EAAMM,QAAQN,EAAMO,MAC1DN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaI,IAAKR,EAAMS,WCFpCC,SAFG,SAAAV,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaJ,EAAMW,kBCY9CC,MAZf,SAAgBZ,GACZ,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASJ,EAAMW,UAC9BV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,gBACkBJ,EAAMa,MADxB,mBAC+Cb,EAAMc,oBCwD9CC,oNAvDbC,MAAQ,CACNC,QACAJ,MAAO,EACPC,UAAW,KAGbR,QAAU,SAAAC,GACRW,EAAKF,MAAMC,MAAME,KAAK,SAACd,EAASe,GAC9B,GAAIf,EAAQE,KAAOA,EAAI,CACrB,GAAsB,IAAnBU,EAAMG,GAAGC,MAMV,OALAJ,EAAMG,GAAGC,MAAQJ,EAAMG,GAAGC,MAAQ,EAClCH,EAAKI,SAAS,CAACT,MAAQK,EAAKF,MAAMH,MAAQ,GAAI,WAC5CU,QAAQC,IAAIC,KAAKT,MAAMH,SAEzBK,EAAKF,MAAMC,MAAMS,KAAK,kBAAMC,KAAKC,SAAW,MACrC,EAEPV,EAAKW,iBAMbA,SAAW,WAWT,OAVIX,EAAKF,MAAMH,MAAQK,EAAKF,MAAMF,WAChCI,EAAKI,SAAS,CAACR,UAAWI,EAAKF,MAAMH,OAAQ,WAC3CU,QAAQC,IAAIC,KAAKT,MAAMF,aAG3BI,EAAKF,MAAMC,MAAMa,QAAQ,SAAAC,GACvBA,EAAKV,MAAQ,IAEfW,MAAK,2BAAAC,OAA4Bf,EAAKF,MAAMH,QAC5CK,EAAKI,SAAS,CAACT,MAAO,KACf,2EAGF,IAAAqB,EAAAT,KACP,OACExB,EAAAC,EAAAC,cAACgC,EAAD,KACElC,EAAAC,EAAAC,cAACiC,EAAD,CAAQvB,MAAOY,KAAKT,MAAMH,MAAOC,UAAWW,KAAKT,MAAMF,WAAvD,uBACCW,KAAKT,MAAMC,MAAMoB,IAAI,SAAAN,GAAI,OACxB9B,EAAAC,EAAAC,cAACmC,EAAD,CACAhC,QAAS4B,EAAK5B,QAASC,GAAIwB,EAAKxB,GAAIgC,IAAKR,EAAKxB,GAAIE,MAAOsB,EAAKtB,kBA5CpD+B,IAAMC,YCFxBC,IAASC,OAAO1C,EAAAC,EAAAC,cAACyC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.a6c32330.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nfunction Card(props) {\r\n    return (\r\n        <div className=\"card\" onClick={() =>  props.counter(props.id)}>\r\n        <div className=\"img-container\">\r\n            <img className=\"card-image\" src={props.image} />\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport \"./Container.css\";\r\n\r\nconst Container = props => <div className=\"container\">{props.children}</div>\r\n\r\nexport default Container;","import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <div className=\"header\">\r\n        <div className=\"title\">{props.children}</div>\r\n        <div className=\"scores\">\r\n            Total Score: {props.score} Highest Score: {props.highScore}\r\n        </div>\r\n    </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport Card from \"./components/Card\";\r\nimport Container from \"./components/Container\";\r\nimport Header from \"./components/Header\";\r\nimport cards from \"./cards.json\";\r\nimport './App.css';\r\n\r\n\r\nclass App extends React.Component{\r\n  state = {\r\n    cards,\r\n    score: 0,\r\n    highScore: 0\r\n  };\r\n\r\n  counter = id => {\r\n    this.state.cards.find((onClick, i) => {\r\n      if (onClick.id === id) {\r\n        if(cards[i].count === 0){\r\n          cards[i].count = cards[i].count + 1;\r\n          this.setState({score : this.state.score + 1}, function(){\r\n            console.log(this.state.score);\r\n          });\r\n          this.state.cards.sort(() => Math.random() - 0.5)\r\n          return true; \r\n        } else {\r\n          this.gameOver();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  gameOver = () => {\r\n    if (this.state.score > this.state.highScore) {\r\n      this.setState({highScore: this.state.score}, function() {\r\n        console.log(this.state.highScore);\r\n      });\r\n    }\r\n    this.state.cards.forEach(card => {\r\n      card.count = 0;\r\n    });\r\n    alert(`Game Over! Final Score: ${this.state.score}`);\r\n    this.setState({score: 0});\r\n    return true;\r\n  }\r\n\r\nrender() {\r\n  return (\r\n    <Container>\r\n      <Header score={this.state.score} highScore={this.state.highScore}>Marvel Clicky Game!</Header>\r\n      {this.state.cards.map(card => (\r\n        <Card\r\n        counter={this.counter} id={card.id} key={card.id} image={card.image}\r\n        />\r\n      ))}\r\n    </Container>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n;\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n"],"sourceRoot":""}